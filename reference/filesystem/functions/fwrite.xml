<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bb6247b68128cab1b166b49a3a73a87f40333267 Maintainer: pastore Status: working -->
<!-- CREDITS: cortesi,fernando -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fwrite">
 <refnamediv>
  <refname>fwrite</refname>
  <refpurpose>Scrittura su file binary-safe</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>fwrite</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fwrite</function> scrive il contenuto di
   <parameter>data</parameter> nello stream del file puntato da
   <parameter>stream</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       La stringa che deve essere scritta.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Se l'argomento <parameter>length</parameter> è un &integer;, la scrittura si arresterà
       dopo aver scritto <parameter>length</parameter> byte o alla
       fine di <parameter>data</parameter> a seconda di quale dei due eventi si verifica prima.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   <function>fwrite</function> restituisce il numero di byte
   scritti, &return.falseforfailure;.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <function>fwrite</function> genera un <constant>E_WARNING</constant> in caso di errore.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       Ora <parameter>length</parameter> è nullable.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Un esempio semplice di <function>fwrite</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$filename = 'test.txt';
$somecontent = "Aggiungi questo al file\n";

// Assicuriamoci prima che il file esista e sia scrivibile.
if (is_writable($filename)) {

    // Nel nostro esempio stiamo aprendo $filename in modalità append.
    // Il puntatore del file si trova in fondo al file, quindi
    // è lì che $somecontent verrà scritto quando lo scriviamo con fwrite().
    if (!$fp = fopen($filename, 'a')) {
         echo "Impossibile aprire il file ($filename)";
         exit;
    }

    // Scriviamo $somecontent nel nostro file aperto.
    if (fwrite($fp, $somecontent) === FALSE) {
        echo "Impossibile scrivere nel file ($filename)";
        exit;
    }

    echo "Successo, scritto ($somecontent) nel file ($filename)";

    fclose($fp);

} else {
    echo "Il file $filename non è scrivibile";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Scrivere su uno stream di rete potrebbe terminare prima che l'intera stringa sia scritta.
    Il valore restituito da <function>fwrite</function> potrebbe essere verificato:
    <programlisting role="php">
     <![CDATA[
<?php
function fwrite_stream($fp, $string) {
    for ($written = 0; $written < strlen($string); $written += $fwrite) {
        $fwrite = fwrite($fp, substr($string, $written));
        if ($fwrite === false) {
            return $written;
        }
    }
    return $written;
}
?>
]]>
    </programlisting>
   </para>
  </note>

  <note>
   <para>
    Su sistemi che differenziano tra file binari e di testo
    (ad esempio Windows), il file deve essere aperto con 'b' incluso nel
    parametro di modalità di <function>fopen</function>.
   </para>
  </note>
  <note>
   <para>
    Se <parameter>stream</parameter> è stato aperto in modalità append tramite <function>fopen</function>,
    le scritture con <function>fwrite</function> sono atomiche (a meno che la dimensione di
    <parameter>data</parameter> non superi la dimensione del blocco del filesystem, su alcune
    piattaforme, e purché il file sia su un filesystem locale). Cioè,
    non c'è bisogno di usare <function>flock</function> prima di chiamare
    <function>fwrite</function>; tutti i dati saranno scritti senza
    interruzione.
   </para>
  </note>
  <note>
   <para>
    Se si scrive due volte sul puntatore del file, i dati verranno aggiunti
    alla fine del contenuto del file:
    <programlisting role="php">
     <![CDATA[
<?php
$fp = fopen('data.txt', 'w');
fwrite($fp, '1');
fwrite($fp, '23');
fclose($fp);

// il contenuto di 'data.txt' è ora 123 e non 23!
?>
]]>
    </programlisting>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fread</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->