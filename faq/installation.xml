<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 8e732e84a1425cf0ab3a5b0da8fe113c7a6da85e Maintainer: pastore Status: ready -->
<!-- CREDITS: hfish -->
 <chapter xml:id="faq.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Installazione</title>
  <titleabbrev>Installazione</titleabbrev>

  <para>
   In questa sezione sono presenti le domande più frequenti riguardo l'installazione 
   di PHP. PHP è disponibile per quasi tutti i sistemi operativi e per quasi tutti i webserver.
  </para>
  <para>
   Per installare PHP, seguire le istruzioni del file <xref linkend="install"/>.
  </para>

  <qandaset>
   <qandaentry xml:id="faq.installation.apache2">
    <question>
     <para>
      Perché non dovrei usare Apache2 con il threaded MPM in un ambiente di produzione?
     </para>
    </question>
    <answer>
     <para>
      PHP è una colla. È la colla utilizzata per creare belle applicazioni web
      appiccicando decine di librerie di terze parti e facendole apparire
      come una entità coerente attraverso un'interfaccia di linguaggio intuitiva e facile da
      apprendere. La flessibilità e potenza di PHP dipendono dalla stabilità e
      robustezza della piattaforma sui cui gira. Ha bisogno di un sistema operativo funzionante, un
      web server funzionanante e delle librerie esterne funzionanti, per ottenere lo scopo. Se uno qualsiasi
      di questi elementi smette di funzionare, PHP ha bisogno di metodi per identificare il problema e risolverlo
      velocemente. Quando si rende il framework più complesso eliminando
      completamente i thread di esecuzione separata, i segmenti separati di memoria
      ed un solido ambiente in cui eseguire ogni richiesta, si introduce
      un punto di debolezza nel sistema PHP.
     </para>
     <para>
      Se il threaded MPM è necessario, meglio considerare una configurazione FastCGI
      dove PHP sia eseguito nel proprio spazio di memoria.  
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.phpini">
    <question>
     <para>
      Unix/Windows: dove devo mettere il mio file
      &php.ini;?
     </para>
    </question>
    <answer>
     <para>
      Nei sistemi Unix il percorso predefinito è <filename>/usr/local/lib</filename>
      ovvero <filename>&lt;install-path&gt;/lib</filename>.
      Molti utenti vorranno cambiare questo percorso durante la fase di compilazione con il flag
      <link linkend="configure.with-config-file-path">--with-config-file-path</link>. Per esempio
      potresti modificare il percorso in un modo simile a questo:
      <programlisting role="shell">
--with-config-file-path=/etc
      </programlisting>
      e quindi dovresti copiare il file <filename>php.ini-dist</filename> della distribuzione in
      <filename>/etc/php.ini</filename> e modificarlo
      per ottenere tutti i cambiamenti voluti.
     </para>
      <programlisting role="shell">
--with-config-file-scan-dir=PATH 
      </programlisting>
     <para>
      Nei sistemi Windows il percorso predefinito per &php.ini; corrisponde alla
      cartella stessa di Windows. Se si sta usano il web server Apache, &php.ini; viene prima
      cercato nella cartella di installazione di Apache, es <filename>c:\program
      files\apache group\apache</filename>. In questo modo si possono avere
      differenti &php.ini; per differenti versioni di Apache sulla stessa
      macchina.
     </para>
     <para>
     Vedere anche il capitolo sul <link
     linkend="configuration.file">file di configurazione</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.nodata">
    <question>
     <para>
      Unix: ho installato PHP, ma ogni volta che carico uno script ricevo un messaggio di errore che dice:
      'Document Contains No Data' (lo script non contiene dati). Che sta succedendo?
     </para>
    </question>
    <answer>
     <para>
      Probabilmente PHP sta riscontrando un qualche tipo di problema e
      sta generando un core dump. Controlla il file log degli errori del tuo
      server ed individua il problema, quindi cerca di riprodurre il problema in un
      piccolo script. Se sai come usare 'gdb', sarebbe di aiuto fornire agli
      sviluppatori una copia dei messaggi di errore per consentire agli stessi di
      localizzare il problema. Se usi PHP come modulo di Apache prova ad eseguire
      le seguenti operazioni:
      <itemizedlist>
       <listitem>
        <para>
         Ferma i tuoi processi httpd
        </para>
       </listitem>
       <listitem>
        <para>
         gdb httpd
        </para>
       </listitem>
       <listitem>
        <para>
         Ferma i tuoi processi httpd
        </para>
       </listitem>
       <listitem>
        <para>
         &gt; esegui -X -f /percorso/per/httpd.conf
        </para>
       </listitem>
       <listitem>
        <para>
         Quindi trova l'URL che causa problemi usando il tuo browser
        </para>
       </listitem>
       <listitem>
        <para>
         &gt; esegui -X -f /percorso/per/httpd.conf
        </para>
       </listitem>
       <listitem>
        <para>
         Se ottieni un, gdb ora dovrebbe informarti di ciò
        </para>
       </listitem>
       <listitem>
        <para>
         digita: bt
        </para>
       </listitem>
       <listitem>
        <para>
         Comunica il bug a <link xlink:href="&url.php.bugs;">&url.php.bugs;</link>
         includendo un backtrace del problema.
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Se nei tuoi script usi espressioni regolari
      (<function>ereg</function> e simili), dovresti assicurarti
      di aver compilato PHP e Apache con lo stesso pacchetto di
      espressioni regolari. Ciò dovrebbe succedere
      automaticamente con PHP e Apache 1.3.x
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.processing">
    <question>
     <para>
      Unix: ho installato PHP usando dei pacchetti RPM, ma Apache
      non processa le mie pagine PHP. Che sta succedendo?
     </para>
    </question>
    <answer>
     <para>
      Presumendo che tu abbia installato sia Apache che PHP da pacchetti RPM,
      hai bisogno di decommentare o aggiungere qualcuna o tutte le righe seguenti
      nel file &httpd.conf;:
      <programlisting role="apache-conf">
<![CDATA[
# Extra Modules
AddModule mod_php.c
AddModule mod_perl.c

# Extra Modules
LoadModule php_module         modules/mod_php.so
LoadModule php5_module        modules/libphp5.so
LoadModule perl_module        modules/libperl.so
]]>
      </programlisting>
      And add:
      <programlisting role="apache-conf">
<![CDATA[
AddType application/x-httpd-php .php
]]>
      </programlisting>
      ... alle proprietà globali o alle proprietà del VirtualDomain
      su cui vuoi aggiungere il supporto PHP.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.frontpage">
    <question>
     <para>
      Unix: ho installato la patch di Apache per avere compatibilità con le estensioni del server di FrontPage,
      e improvvisamente PHP ha smesso di funzionare: PHP è quindi incompatibile con le estensioni del server di
      FrontPage per Apache?
     </para>
    </question>
    <answer>
     <para>
      No, PHP lavora senza problemi con le estensioni del server di FrontPage.
      Il problema è che la patch di FrontPage modifica diverse strutture di
      Apache dalle quali dipende PHP stesso. Per risolvere il problema
      ricompila PHP (usando 'make clean ; make') dopo aver installato la patch.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.blankscreen">
    <question>
     <para>
      Unix/Windows: ho installato PHP, ma se provo ad accedere ai miei
      script via browser, ricevo una pagina vuota.
     </para>
    </question>
    <answer>
     <para>
      Controlla il sorgente della pagina che ricevi e probabilmente vedrai
      il codice sorgente del tuo script PHP.
      Ciò significa che il webserver
      non ha inviato lo script all'interprete PHP. C'è qualcosa che non va
      nella configurazione del webserver: confronta la configurazione del
      webserver con le istruzioni per installare PHP.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.500error">
    <question>
     <para>
      Unix/Windows: ho installato PHP, ma se
      provo ad accedere ai miei script via browser,
      ricevo un errore 500 dal server.
     </para>
    </question>
    <answer>
     <para>
      C'è qualcosa che non va al momento in cui il server prova
      a richiamare l'interprete PHP. Per ricevere un messaggio
      sensato di errore, dalla linea di comando, cambia la
      cartella che contiene l'eseguibile di PHP (<filename>php.exe</filename>
      sotto Windows) ed esegui <command>php -i</command>. Se PHP
      riscontrerà dei problemi durante l'esecuzione, comparirà un
      opportuno messaggio d'errore contente informazioni su cosa fare
      successivamente. Se riceverai una schermata di codice HTML
      (la stessa di <function>phpinfo</function>) significherà che PHP
      sta lavorando correttamente, e quindi il problema potrebbe essere
      legato alla configurazione del server, che andrebbe quindi controllata.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.undefinedsyms">
    <question>
     <para>
      Diversi sistemi operativi: ho installato PHP senza ricevere errori,
      ma se provo a far partire Apache ricevo un errore con strani simboli:
      <programlisting role="shell">
[mybox:user /src/php5] root# apachectl configtest
 apachectl: /usr/local/apache/bin/httpd Undefined symbols:
  _compress
  _uncompress
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      Ciò non ha nulla a che vedere con PHP, ma con le librerie lato client di MySQL.
      Alcune richiedono <option
      role="configure">--with-zlib</option>, altre no. Questo
      argomento è ripreso meglio nelle FAQ relative a MySQL.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.cgierror">
    <question>
     <para>
      Windows: ho installato PHP, ma se provo ad accedere
      ai miei script via browser, ricevo questo errore:
      <screen>
<![CDATA[
cgi error:
 The specified CGI application misbehaved by not
 returning a complete set of HTTP headers.
 The headers it did return are:
]]>
      </screen>
     </para>
    </question>
    <answer>
     <para>
      Questo errore vuol dire che PHP non è riuscito ad ottenere
      qualcuno di tutti gli output richiesti. Per ricevere un messaggio
      sensato di errore, dalla linea di comando, cambia la cartella che
      contiene l'eseguibile di PHP (<filename>php.exe</filename> sotto
      Windows) ed esegui <command>php -i</command>. Se PHP riscontrerà
      dei problemi durante l'esecuzione, comparirà un opportuno messaggio d'errore contente informazioni su cosa
      fare successivamente. Se riceverai una schermata di codice HTML (la stessa di <function>phpinfo</function>)
      significherà che PHP sta lavorando correttamente, e quindi il problema potrebbe essere legato alla
      configurazione del server, che andrebbe quindi controllata.
     </para>
     <para>
      Dopo che PHP sta lavorando dalla linea di comando, prova ad accedere
      di nuovo ai tuoi script via browser. Se ancora ricevi messaggi di errore,
      il problema potrebbe essere dovuto ad una delle seguenti cose:
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        I permessi dei file <filename>php.exe</filename>,
        <filename>php5ts.dll</filename>, &php.ini; o di qualche
        altra estensione PHP che stai cercando di caricare potrebbero
        essere settati in modo da impedire l'accesso
        agli utenti anonimi di internet <literal>ISUR_&lt;machinename&gt;</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Il file dello script non esiste (o forse non è dove pensi
        in relazione alla tua root directory). Nota che con IIS
        puoi aggirare quest'ostacolo selezionando la voce
        relativa a 'check file exists' (controlla se il
        file esiste) nelle opzioni di Internet Services Manager. Se il file
        di uno script non esiste il server invierà un errore 404. C'è un
        ulteriore beneficio: IIS si preoccuperà di effettuare
        tutte le autenticazioni necessarie al posto tuo, in base ai permessi NTLanMan
        del tuo file contenente lo script.
       </simpara>
      </listitem>
     </itemizedlist>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.phpandiis">
    <question>
     <para>
      Windows: ho seguito tutte le istruzioni, ma
      proprio non riesco a far convivere PHP con IIS!
     </para>
    </question>
    <answer>
     <para>
      Assicurati che l'utente con il quale stai cercando di eseguire script
      PHP abbia i permessi necessari per eseguire <filename>php.exe</filename>!
      IIS usa un utente anonimo che viene aggiunto al momento dell'installazione
      del webserver. Questo utente ha bisogno dei permessi appropriati per eseguire
      <filename>php.exe</filename>. Qualunque utente avrà bisogno dei permessi appropriati per eseguire <filename>php.exe</filename>.
      Se usi IIS4, hai bisogno di dire al webserver che c'è un parser PHP.
      Può essere utile leggere
      <link linkend="faq.installation.forceredirect">queste faq</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.forceredirect">
    <question>
     <para>
       Quando uso PHP come un CGI con IIS, PWS, OmniHTTPD o Xitami,
       ricevo questo errore: <literal>Security Alert! PHP CGI
       cannot be accessed directly.</literal>.
     </para>
    </question>
    <answer>
     <para>
      Devi impostare la direttiva <link linkend="ini.cgi.force-redirect">
      cgi.force_redirect</link> a <literal>0</literal>.
      Il suo default è <literal>1</literal> quindi assicurati che la direttiva
      non sia commentata (con un <literal>;</literal>). Come
      tutte le direttive, è impostata in &php.ini;
     </para>
     <para>
      Dal momento che il default è <literal>1</literal>, è importantissimo
      essere sicuri al 100% che venga letto il file &php.ini; corretto.
      Leggere <link linkend="faq.installation.findphpini">questa faq</link>
      per meggiori dettagli.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.findphpini">
    <question>
     <para>
      Come faccio a capire se il mio &php.ini; è stato trovato e letto?
      Sembra che le mie modifiche non siano state impostate.
     </para>
    </question>
    <answer>
     <para>
      Per essere certo che il tuo &php.ini; sia stato letto da PHP, chiama la funzione
      <function>phpinfo</function> e nella parte alta troverai una lista
      intitolata <literal>Configuration File (php.ini)</literal>.
      Questa ti dirà dove PHP sta cercando &php.ini; e
      se è stato letto o meno.  Se si vede solo il <envar>PATH</envar> ad una cartella
      significa che non è stato letto e che devi mettere il &php.ini;
      in quella cartella.  Se &php.ini; compare nel <envar>PATH</envar> della cartella
      significa che è stato letto.
     </para>
     <para>
      Se &php.ini; viene e si sta eseguendo PHP come un modulo,
      assicurarsi di riavviare il server web dopo aver fatto un cambiamento a
      &php.ini;
     </para>
     <para>
      Vedere anche <function>php_ini_loaded_file</function>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.addtopath">
    <question>
     <para>
      Come aggiungere la cartella di PHP al <envar>PATH</envar>
      in Windows?
     </para>
    </question>
    <answer>
     <para>
      Su Windows:
      <itemizedlist>
       <listitem><para>
        Vai nel Pannello di Controllo e apri l'icona Sistema (Start → Impostazioni)
       </para></listitem>
       <listitem><para>
        Vai alla linguetta Avanzate
       </para></listitem>
       <listitem><para>
        Click sul bottone 'Variabili d'Ambiente'
       </para></listitem>
       <listitem><para>
        Guarda il pannello 'Variabili di sistema'
       </para></listitem>
       <listitem><para>
        Trova il valore Path (potrebbe essere necessario scorrere la lista)
       </para></listitem>
       <listitem><para>
        Fai doppio click su questo valore
       </para></listitem>
       <listitem><para>
        Aggiungi la cartella  PHP alla fine, anteponendo ';' prima (es.
        <literal>;C:\php</literal>)
       </para></listitem>
       <listitem><para>
        Premi OK e riavvia il computer
       </para></listitem>
      </itemizedlist>
     </para>
     <note>
      <simpara>
       Assicurati di fare un reboot dopo aver seguito queste istruzione per esser certo che le modifiche a
       <envar>PATH</envar> siano applicate.
      </simpara>
     </note>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.phprc">
    <question>
     <para>
      Come rendo disponibile in windows il file &php.ini;?
     </para>
    </question>
    <answer>
     <para>
      Ci sono diversi modi per farlo. Se si sta usando Apache,
      fare riferimento alla documentazione di Apache, altrimenti
      bisogna impostare la variabile d'ambiente <varname>PHPRC</varname>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.apache.multiviews">
    <question>
     <para>
       Si può usare la Apache content negotiation (opzione MultiViews)
      con PHP?
     </para>
    </question>
    <answer>
     <para>
      Se i link ai file PHP includono le estensioni, tuto funziona perfettamente. Questa
      FAQ è solo nel caso in cui i link ai file PHP non includano le estensioni
      e si voglia usare la content negotiation per identificare i file PHJP dalla URL
      senza estensioni.
      In questo caso, sostituire la riga <literal>AddType application/x-httpd-php
      .php</literal> con:
      <programlisting role="apache-conf">
<![CDATA[
AddHandler php5-script php
AddType text/html php
]]>
     </programlisting>
     Questa soluzione non funziona con Apache 1 poiché il modulo PHP non intercetta
     <literal>php-script</literal>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.installation.requestmethods">
    <question>
     <para>
      PHP è limitato a processare solo metodi GET e POST?
     </para>
    </question>
    <answer>
     <para>
      No, si possono gestire tutti i metodi di richiesta, es. CONNECT. Lo stato
      appropriato di risposta può essere inviato con la funzione <function>header</function>.
      Se devono essere gerstiti solo i metodi GET e POST, questo può essere ottenuto con
      questa configurazione diApache:
      <programlisting role="apache-conf">
<![CDATA[
<LimitExcept GET POST>
Deny from all
</LimitExcept>
]]>
     </programlisting>
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
