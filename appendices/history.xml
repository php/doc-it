<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 763506217efcf05c758932771e33fad3fa64b506 Maintainer: lucalzetta Status: ready -->
<!-- $Revision$ -->

<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Storia di PHP e dei progetti correlati</title>
 <para>
  PHP has come a long way since its birth in the mid-1990's.
  From humble beginnings to becoming one of the most prominent
  languages powering the web, the evolution of PHP is a geek's
  fairy tale.  Mind you, such explosive growth was no easy
  task. Those of you interested in briefly seeing how PHP grew
  to become what it is today, read on.  If you'd like to touch
  a piece of Internet history, you can find old releases of
  PHP in the <link xlink:href="&url.php.museum;">PHP Museum</link>.
 </para>
 
 <sect1 xml:id="history.php">
  <title>History of PHP</title>
  
  <sect2 xml:id="history.phpfi">
   <title>PHP Tools, FI, Construction Kit, and PHP/FI</title>
   <para>
    PHP as it's known today is actually the successor to a
    product named PHP/FI. Created in 1994 by Rasmus Lerdorf,
    the very first incarnation of PHP was a simple set of
    Common Gateway Interface (CGI) binaries written in the C
    programming language. Originally used for tracking visits
    to his online resume, he named the suite of scripts "Personal
    Home Page Tools," more frequently referenced as "PHP Tools."
    Over time, more functionality was desired, and Rasmus rewrote
    PHP Tools, producing a much larger and richer implementation.
    This new model was capable of database interaction and more,
    providing a framework upon which users could develop simple dynamic
    web applications such as guestbooks. In June of 1995, Rasmus
    <link xlink:href="&url.php.release1.0.0;">released</link>
    the source code for PHP Tools to the public, which allowed
    developers to use it as they saw fit. This also permitted -
    and encouraged - users to provide fixes for bugs in the code,
    and to generally improve upon it.
   </para>
   <para>
    Nel settembre dello stesso anno, Rasmus si concentrò su PHP e - in
    un breve periodo - si risolse per il nome di PHP. Ora riferito agli
    strumenti come FI (Forms Interpreter), la nuova implementazione
    incluse alcune funzionalità di base di PHP così come le conosciamo
    oggi. Aggiunse variabili Perl-like, l'interpretazione automatica
    delle variabili dei form, e incluse la sintassi HTML nel linguaggio.
    La sintassi per se stessa era simile a quella di Perl, anche se
    molto più limitata, semplice e per certi versi inconsistente
    Infatti per incapsulare il codice in un file HTML
    i programmatori devono usare i commenti di HTML. Anche se questo
    metodo all'inizio non fu ben accetto, FI continuò ad aumentare allegramente
    i suoi consensi come un CGI tool --- ma non ancora come un linguaggio.
    Comunque, questo iniziò a cambiare il mese successivo, nell' ottobre del 1995,
    Rasmus rilasciò una riscrittura completa del codice. Riportando il nome a 
    PHP, fu così nominato (brevemente) "Personal Home Page Construction
    Kit," e fu la prima release a potersi vantare di tale nome, a quel tempo,
    considerata un'interfaccia di scripting avanzata. Il linguaggio era
    deliberatamente disegnato per assomigliare a C nella sua struttura,
    rendendolo così di facile addozione per gli sviluppatori che avevano
    familiarità con il C, Perl e linguaggi simili.
    Evitando così alcune lontane limitazioni con i sistemi di compilazione
    UNIX and POSIX, il potenziale per le implementazioni di Windows NT
    era già stato esplorato.
   </para>
   <para>
    Il codice subì un'altra completa riscrittura nell'aprile del 1996,
    combinando i nomi delle passate releases, Rasmus introdusse PHP/FI.
    Questa implementazione di seconda generazione iniziava veramente ad evolvere PHP
    da raccolta di strumenti in un linguaggio di programmazione vero e proprio.
    Incluse il supporto nativo per i database DBM, mySQL e Postgres95,
    i cookies, supporto per le funzioni definite dall'utente, e molto altro.
    A giugno, PHP/FI aveva una sua versione 2.0. un fatto interessante
    a proposito di questo, comunque, è che ci fu solo una singola versione
    di PHP 2.0. Quando finalmente passò dallo stato di versione beta
    nel novembre del 1997, il motore di parsing che girava a basso livello
    era già stato interamente riscritto.
   </para>
   <para>
    Anche se visse una carriera di sviluppo molto breve, continua a riscontrare
    una crescente popolarità nel sempre giovane mondo della programmazione web.
    Nel 1997 e 1998, PHP/FI fu un culto per molte migliaia di utenti in
    tutto il mondo. Un sondaggio di Netcraft del maggio 1998 indicò che
    quasi 60.000 domini ispezionati avevano nel loro header la parola
    "PHP", indicando che il loro host server aveva installato tale protocollo.
    Questo numero rappresentava aprossimativamente l'1% di tutti i domini di
    Internet in quel periodo. Nonostante questi numeri impressionanti la maturazione
    di PHP/FI era condannata da delle limitazioni: mentre c'erano molti aiutanti
    minori, era ancora essenzialmente sviluppato da un solo individuo.
   </para>
   <para>
    <example>
     <title>Esempio di codice PHP/FI</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  Hey, you are using Netscape!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Sorry, that record does not exist<p>
<!--endif exit-->
  Welcome <!--$user-->!<p>
  You have <!--$index:0--> credits left in your account.<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
   </para>
  </sect2>

  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 fu la prima versione che riassemblò PHP così
    come esiste oggi. Trovando PHP/FI 2.0 ancora inefficiente
    e carente di metodi necessari ad implementare un'applicazione di e-commerce,
    furono sviluppate da un progetto universitario. Andi Gutmans e
    Zeev Suraski di Tel Aviv, Israel, iniziarono di nuovo, un'altra completa
    riscrittura dell' underlyng parser nel 1997. Avvicinarono Rasmus
    online, discussero vari aspetti della corrente
    implementazione e della loro riprogrammazione di PHP. 
    Concentrandosi sull'ottimizzazione dell' engine e iniziando a costruire
    sulle basi esistenti di PHP/FI. Andi, Rasmus, and Zeev decisero di collaborare
    nello sviluppo di un nuovo, indipendente linguaggio di programmazione.
    Questo completo nuovo linguaggio rimuoveva le implicazioni di
    un uso personale e limitato che il nome PHP/FI 2.0 si portava appresso.
    Fu rinominato semplicemente 'PHP', con l'intento iniziale che
    fosse un acronimo ricorsivo, PHP: Hypertext Preprocessor.
   </para>
   <para>
    Uno dei punti di forza di PHP 3.0 era l'enorme estensibilità
    delle sue features. Oltre a ciò provvide gli utenti finali
    di un'interfaccia matura per molti protocolli di database,
    e APIs, la facilità con cui era possibile estendere il liguaggio
    attirò decine di sviluppatori che sottoscrissero molti moduli.
    Discutere, questa era la chiave del tremendo successo di PHP 3.0.
    Altre features essenziali introdotte in PHP 3.0 includevano
    il supporto per la programmazione orientata agli oggetti (OOP)
    emolte altre consistenti modifiche alla sintasi del linguaggio.
   </para>
   <para>
    Nel giugno del 1998, con molti altri sviluppatori di tutto il mondo
    che si unirono al progetto PHP 3.0 fu annunciato dalla nuova squadra
    di sviluppatori di PHP come il successore ufficiale di PHP/FI 2.0.
    Lo sviluppo attivo di PHP/FI 2.0 che cessò di fatto nel novembre
    dell'anno precedente, era ufficiosamente terminato.
    Dopo appena nove mesi di test aperti al pubblico, quando arrivò
    l'annuncio ufficiale del rilascio di PHP 3.0, era già installato su
    oltre 70.000 domini al mondo, e non fu pi limitato a lungo dai
    compilatori dei sistemi operativi POSIX. Una relativamente piccola
    quantità di domini riportavano che PHP era installato su servers
    che giravano sotto Windows 95, 98, NT, e Macintosh. Al suo punto più
    alto, PHP 3.0 era installato approssimativamente sul 10% dei web servers
    di Internet.
   </para>
  </sect2>

  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    Nell'inverno del 1998, poco dopo il rilascio ufficiale di
    PHP 3.0, Andi Gutmans e Zeev Suraski iniziarono a lavorare
    sulla riscrittura del cuore di PHP. L'obiettivo del progetto 
    era di testare le prestazioni di applicazioni complesse 
    e testare la modularità del codice di base di PHP.
    Quali applicazioni era possibile fare con PHP 3.0 le 
    sue nuove features e il supporto per una moltitudine
    di database e API di terze parti. Ma PHP 3.0 non
    era pensato per maneggiare applicazioni complesse in
    maniera efficente.
   </para>
   <para>
    Il nuovo motore, soprannominato 'Zend Engine' (compressione dei loro
    nomi, Zeev e Andi), raggiunse questi obiettivi con successo,
    e fu introdotto alla metà del 1999. PHP 4.0,
    si basava su questo motore, assieme a una vasta scelta
    di nuove features, fu ufficialmente rilasciato nel maggio del
    2000, quasi due anni dopo il suo predecessore.  In aggiunta
    alle notevoli performance testate, PHP 4.0
    includeva altre features chiave come il supporto per molti altri
    web servers, sessioni HTTP, output buffering, metodi più sicuri
    per maneggiare l'input degli utenti e molti nuovi costrutti
    del linguaggio.
   </para>
  </sect2>

  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    PHP 5 fu rilasciato nel luglio del 2004 dopo un lungo
    lavoro di sviluppo e numerose pre-versioni. E' più che altro
    ispirato al suo core, lo <literal>Zend Engine 2.0</literal> con
    un nuvo object model e molte altre nuove features.
   </para>
   <para>
    La squadra di sviluppatori di PHP include decine di persone,
    così come decine di altre persone lavorano su progetti correlati a PHP
    come PEAR, PECL, e sulla documentazione, e una struttura di network
    sottostante basata su oltre un centinaio di web servers individuali
    su sei dei sette continenti del pianeta. Anche se è solo una stima
    basata su statistiche dello scorso anno è ragionevole pensare che
    PHP sia ora installato su decine e forse centinaia di milioni di
    domini in tutto il mondo.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="history.php.related">
  <title>Storia di PHP e dei progetti correlati</title>
  
  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, <literal>PHP Extension and
    Application Repository</literal> (originariamente, PHP Extension and Add-on
    Repository) è la versione PHP delle classi fondamentali, e potrebbe crescere
    in futuro per essere una delle chiavi di distribuzione delle estensioni di
    PHP tra i programmatori.
   </para>
   <para>
    PEAR da una discussione iniziata al PHP Developers'
    Meeting (PDM) del gennaio dell'anno 2000 a Tel Aviv. 
    Fu creata da Stig S. Bakken, e dedicata al suo primo figlio, Malin Bakken.
   </para>
   <para>
    Fin dall'inizio del 2000, PEAR è cresciuto per essere grande, 
    un progetto significativo con un gran numero di programmatori
    che lavorano per implementazioni comuni, funzionalità riutilizzabili
    per il bene dell'intera comunità PHP.
    PEAR oggi include una grande varietà di infrastrutture e classi
    fondamentali per l'accesso ai database, archiviazione dei contenuti,
    funzioni matematiche, dedicate all'eCommerce e molto altro.
   </para>
   <para>
    Altre informazioni riguardo a PEAR possono essere trovate <link
    xlink:href="&url.php.pear.manual;">nel manuale</link>.
   </para>
  </sect2>

  <sect2 xml:id="history.phpqa">
   <title>PHP Quality Assurance Initiative</title>
   <para>
    La <link xlink:href="&url.php.prerelease;">PHP Quality Assurance
    Initiative</link> è stata avviata nell'estate del 2000 in 
    risposta a criticità che le releases di PHP non avevano
    potuto testare abbastanza bene per gli ambienti di produzione.
    La squadra ora consiste di un gruppo di sviluppatori
    con una buona comprensione del codice di base di PHP.
    Questi sviluppatori spendono molto del loro tempo
    a localizzare e fissare bugs interni a PHP.
    Inoltre ci sono molti altri elementi della squadra
    che testano e forniscono suggerimenti su questi lavori
    usando una grande varietà di piattaforme.
   </para>
  </sect2>

  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> è la soluzione
    di PHP per scrivere applicazioni grafiche sul lato client.
    Andrei Zmievski ricorda il processo di pianificazione e
    creazione di PHP-GTK:
   </para>
   <blockquote>
    <para>
     La programmazione di interfacce grafiche per utenti (GUI)
     è sempre stata uno dei miei interessi, e trovai che
     Gtk+ era un bel kit di strumenti, eccetto che per il fatto
     che programmarlo in C era piuttosto tedioso.
     Dopo aver testimoniato per le implementazioni di PyGtk e 
     GTK-Perl, decisi di scoprire se PHP fosse in grado di costruire
     interfacce con Gtk+, anche essenziali. Partiti nell'agosto 
     del 2000, iniziai ad avere un po più di tempo libero così
     fu che inizia la sperimentazione. La mia linea guida fu
     l'implementazione PyGtk, era una feature abbastanza completa
     ed aveva una bella interfaccia orientata agli oggetti.
     James Henstridge, l'autore di PyGtk, ci fornì dei preziosi
     consigli durante questa fase iniziale.
    </para>
    <para>
     Scrivere a mano le interfacce per tutte le funzioni di Gtk+ era
     fuori discussione, così afferrai l'idea di un generatore di codice
     in modo simile a quello che fu fatto per PyGtk.
     Un generatore di codice è un programma PHP che legge un set
     di <filename>.defs</filename> file contenenti informazioni sulle 
     classi Gtk+, costanti, e metodi e genera del codice "C" che interfaccia
     PHP con esse.
     Quello che non può essere generato automaticamente può essere
     scritto a mano in <filename>.overrides</filename> file.
    </para>
    <para>
     Lavorare sul generatore di codice e le infrastrutture prese
     del tempo perciò potei spendere poco tempo su PHP-GTK durante
     l'autunno del 2000. Poi mostrai PHP-GTK a Frank Kromann, lui
     se ne interessò ed iniziò ad aiutarmi con il generatore di codice
     e l'implementazione win32. Quando scrivemmo il primo programma
     Hello World e lo accendemmo fu veramente eccitante. Ci prese un 
     altro paio di mesi per rendere il progetto presentabile e la
     versione iniziale fu rilasciata il primo marzo 2001. La storia
     prontamente crebbe.
    </para>
    <para>
     Sentivamo che PHP-GTK poteva essere esteso, preparai
     mailing lists separate e CVS repositories per il PHP-GTK,
     così come il sito di gtk.php.net con l'aiuto di Colin Viebrock.
     Anche la documentazione doveva essere fatta e James Moore
     ci venne in aiuto per questa.
    </para>
    <para>
     Fin dal suo rilascio PHP-GTK è stato popolare. Abbiamo
     la nostra squadra per la documentazione, il manuale si
     mantiene in forma, e la gente inizia a scrivere estensioni per
     PHP-GTK, e altre e altre ancora eccitanti applicazioni con esso.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.books">
  <title>Libri su PHP</title>
  <para>
   Come PHP crebbe, iniziò ad essere riconosciuto come piattaforma
   di programmazione popolare per il web. Uno dei più interessanti
   modi di osservare questo trend era osservare i libri su PHP che
   uscivano nel corso degli anni.
  </para>
  <para>
   Il meglio delle nostre conoscenze, il primo libro dedicato a PHP fu:
   'PHP - tvorba interaktivních internetových aplikací' (<emphasis>PHP
   - Creare Applicazioni Interattive per Internet</emphasis>) - un 
   libro Ceco pubblicato nell'aprile del 1999, autore: Jirka Kosek. il
   mese successivo seguì un libro in tedesco, autori: Egon Schmid, 
   Christian Cartus and Richard Blume. Il primo libro in inglese su PHP
   fu pubblicato in breve e fu: 'Core PHP Programming' by
   Leon Atkinson. Questi libri riguardavano PHP 3.0.
  </para>
  <para>
   Mentre questi libri erano i primi del loro genere furono seguiti
   da un grande numero di libri da una moltitudine di autori ed editori.
   Ci sono oltre 400 libri in inglese, oltre 100 libri in tedesco, e
   oltre 50 libri in francese o spagnolo! Inoltre si possono trovare 
   libri su PHP in diverse altre lingue, incluso il coreano, il giapponese
   e l'ebraico.
  </para>
  <para>
   Chiaramente questo grande numero di libri scritti da tanti differenti
   autori e pubblicati da differenti editori e la loro disponibilità in tutte
   queste lingue sono una forte testimonianza del successo planetario di PHP.
  </para>
 </sect1>
 
 <sect1 xml:id="history.php.publications">
  <title>Pubblicazioni su PHP</title>
  <para>
   Per il meglio della nostra conoscenza, il primo articolo su PHP su
   una rivista a larga diffusione fu pubblicato nella repubblica Ceca
   intitolato: mutation of Computerworld nella primavera del 1998,
   parlando di PHP 3.0. Come per i libri questo fu il primo di una
   serie di molti articoli pubblicati su PHP in vaarie importanti riviste.
  </para>
  <para>
   Articoli su PHP apparsero in Dr. Dobbs, Linux Enterprise,
   Linux Magazine e molte altre. Articoli sulla migrazione da
   applicazioni basate su ASP verso PHP sotto Windows apparirono 
   anche su <productname>Microsoft</productname>'s
   veramente <acronym>MSDN</acronym>!
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
