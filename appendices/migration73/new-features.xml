<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 216c1d34f9c4de575cf7115107a40f90f45b21c3 Maintainer: lucalzetta Status: ready -->
<!-- $Revision$ -->

<sect1 xml:id="migration73.new-features" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Nuove caratteristiche</title>

 <sect2 xml:id="migration73.new-features.core">
  <title>PHP Core</title>

  <sect3 xml:id="migration73.new-features.core.heredoc">
   <title>Sintassi per Heredoc e Nowdoc più flessibile</title>

   <para>
    Il marker di chiusura per un documento 
    di stringhe non è più necessario sia seguito 
    da un simbolo di doppia puntegiatura o da un 
    simbolo di new line. Inoltre il marker di 
    chiusura può anche essere indentato, nel qual 
    caso l'indentazione verrà tolta da tutte le 
    linee del documento.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.destruct-reference">
   <title>La destrutturazione degli array supporta gli assegnamenti per riferimento</title>

   <para>
    La destrutturazione degli array ora supporta 
    gli assegnamenti per riferimento usando la 
    sintassi <literal>[&amp;$a, [$b, &amp;$c]] = $d</literal>. 
    La stessa caratteristica è supportata anche 
    per gli oggetti <function>list</function>.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.instanceof-literals">
   <title>L'operatore Instanceof accetta i Literals</title>

   <para>
    <literal>instanceof</literal> ora accetta i literals 
    come primo operando, nel qual caso il risultato 
    è sempre &false;.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.compileerror">
   <title>CompileError Exception al posto di alcuni Compilation Errors</title>

   <para>
    Una nova <classname>CompileError</classname> 
    exception è stata aggiunta tra quelle 
    ispezionate da <classname>ParseError</classname>.
    Un piccolo numero di errori di compilazione 
    ora generano un <classname>CompileError</classname> 
    anziché un fatal error.
    Al momento questo interessa solo degli errori 
    di compilazione che possono essere riversati 
    da  <function>token_get_all</function> in 
    modalità <constant>TOKEN_PARSE</constant>, 
    ma altri errori potranno essere convertiti 
    in futuro.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.trailing-commas">
   <title>Serie di virgole ammesse nelle chiamate</title>

   <para>
    Le serie di virgole ora sono ammesse nelle 
    chiamate di metodi e funzioni.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.core.argon2id">
   <title>Suporto per Argon2id</title>

   <para>
    L'argomento di configurazione 
    <option role="configure">--with-password-argon2[=dir]</option> 
    ora prevede il supporto per entrambi gli algoritmi 
    di hash Argon2i e Argon2id nelle funzioni 
    <function>password_hash</function>, 
    <function>password_verify</function>,
    <function>password_get_info</function>, e 
    <function>password_needs_rehash</function>. 
    Le password possono essere nascoste e verificate 
    usando la costante <constant>PASSWORD_ARGON2ID</constant>.
    Il supporto per entrambi, Argon2i e Argon2id, 
    nelle funzioni <function>password_*</function> 
    ora richiede che PHP sia collegao con la 
    libreria di riferimento di libargon2 ≥ 20161029.
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.fpm">
  <title>FastCGI Process Manager</title>

  <para>
   Nuove opzioni sono state aggiute per la 
   personalizzazione del logging di FPM:
   <variablelist>
    <varlistentry>
     <term><literal>log_limit</literal></term>
     <listitem>
      <simpara>
       Questa opzione globale può essere usata 
       per impostare il limite di accessi per le linee 
       loggate che permettono di accedere a messaggi 
       più lunghi di 1024 caratteri senza mascherature.
       Risolve anche vari problemi di protezione.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>log_buffering</literal></term>
     <listitem>
      <simpara>
       Questa opzione globale permette un 
       logging sperimantale senza ulteriori 
       buffering.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>decorate_workers_output</literal></term>
     <listitem>
      <simpara>
       Questo insieme di opzioni permette di 
       disabilitare le decorazioni degli output 
       dei workers quando <literal>catch_workers_output</literal> 
       è abilitato.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.bc">
  <title>Funzioni BC Math</title>

  <para>
   La funzione <function>bcscale</function> 
   ora può essere usata anche per recuperare 
   la scala corrente in uso.
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.ldap">
  <title>Protocollo di accesso alle directory Lightweight</title>

  <para>
   Il pieno supporto per i controlli LDAP è 
   stato aggiunto alle funzioni di query 
   <link linkend="book.ldap">LDAP</link> e 
   <function>ldap_parse_result</function>:
   <itemizedlist>
    <listitem>
     <simpara>
      E' stato aggiunto un parametro <literal>$serverctrls</literal> 
      per inviare controlli al server in 
      <function>ldap_add</function>,
      <function>ldap_mod_replace</function>, 
      <function>ldap_mod_add</function>,
      <function>ldap_mod_del</function>, 
      <function>ldap_rename</function>,
      <function>ldap_compare</function>, 
      <function>ldap_delete</function>,
      <function>ldap_modify_batch</function>,
      <function>ldap_search</function>, 
      <function>ldap_list</function> and
      <function>ldap_read</function>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Il parametro esterno <literal>$serverctrls</literal> 
      per ricevere controlli dal server è stato aggiunto in 
      <function>ldap_parse_result</function>.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Il supporto per <constant>LDAP_OPT_SERVER_CONTROLS</constant> 
      e <constant>LDAP_OPT_CLIENT_CONTROLS</constant> in 
      <function>ldap_get_option</function> e 
      <function>ldap_set_option</function> è 
      stato migliorato.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </sect2>

 <sect2 xml:id="migration73.new-features.mbstring">
  <title>Multibyte String Functions</title>

  <sect3 xml:id="migration73.new-features.mbstring.case-mapping-folding">
   <title>Supporto per tutti i Case-Mapping e Case-Folding</title>

   <para>
    Il supporto per i Full Case-Mapping e 
    Case-Folding è stato aggiunto. Diversamente 
    dai simple case-mapping, i full case-mapping 
    possono modificare la lunghezza della stringa. 
    Ad esempio: 
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_strtoupper("Straße");
// Produce STRAßE in PHP 7.2
// Produce STRASSE in PHP 7.3
?>
]]>
     </programlisting>
    </informalexample>
    I differenti casing mapping e folding modes 
    sono disponibili attraverso: 
    <function>mb_convert_case</function>:
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER</constant> (usato da <function>mb_strtolower</function>)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER</constant> (usato da <function>mb_strtoupper</function>)
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_LOWER_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_UPPER_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_TITLE_SIMPLE</constant>
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       <constant>MB_CASE_FOLD_SIMPLE</constant> (usato dalle operazioi case-insensitive)
      </simpara>
     </listitem> 
    </itemizedlist>
    Solo nei linguaggi interessati al 
    full case-mapping vengono eseguiti.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.case-insensitive-ops">
   <title>Operazioni su stringhe Case-Insensitive possono usare Case-Folding</title>

   <para>
    Le operazioni sulle stringhe Case-insensitive 
    ora usano case-folding anziché case-mapping 
    durante le comparazioni. Ciò significa che ci 
    saranno più caratteri considerati uguali 
    (case insensitively).
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.mb-case-title">
   <title>MB_CASE_TITLE esegue una conversione Title-Case</title>

   <para>
    La funzione <function>mb_convert_case</function> 
    con <constant>MB_CASE_TITLE</constant> 
    ora esegue una conversione title-case basata 
    sulle proprietà unicode Cased e CaseIgnorable. 
    In particolare questop permette l'elaborazione 
    dei caratteri virgolette e apostrofo.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.ucd11">
   <title>Support Unicode 11</title>

   <para>
    Le tabelle di dati <link linkend="book.mbstring">Multibyte String</link> 
    sono state aggiornate per Unicode 11.
   </para> 
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.long-strings">
   <title>Supporto per Long String</title>

   <para>
    Le <link linkend="ref.mbstring">Multibyte String Functions</link> 
    ora supportano correttamente le stringhe 
    più grandi di 2GB.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.performance">
   <title>Miglioramenti di Performance</title>

   <para>
    Le performances per le estensioni di 
    <link linkend="book.mbstring">Multibyte String</link>
    sono state significativamente migliorate attraverso 
    tutta la piattaforma. I miglioramenti più 
    consistenti ci sono stati nelle funzioni di 
    case conversion.
   </para>
  </sect3>

  <sect3 xml:id="migration73.new-features.mbstring.named-captures">
   <title>Support per Named Captures</title>

   <para>
    Le funzioni <literal>mb_ereg_*</literal> ora 
    supportano named captures. Le funzioni di 
    confronto come <function>mb_ereg</function> 
    ora ritorneranno cature di nomi sia usando il 
    numero di gruppo sia il loro nome, in modo simile 
    a PCRE:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg('(?<word>\w+)', '国', $matches);
// => [0 => "国", 1 => "国", "word" => "国"];
?>
]]>
     </programlisting>
    </informalexample>
    In più, <function>mb_ereg_replace</function> 
    ora supporta le notazioni a reference named
    captures <code>\k&lt;&gt;</code> 
    e <code>\k''</code> nelle sostituzioni di 
    stringhe: 
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
mb_ereg_replace('\s*(?<word>\w+)\s*', "_\k<word>_\k'word'_", ' foo ');
// => "_foo_foo_"
?>
]]>
     </programlisting>
    </informalexample>
    <code>\k&lt;&gt;</code> e <code>\k''</code> 
    possono anche venire usati per references numerate, 
    lavorando anche con numeri di gruppi superiori a 9. 
   </para>
  </sect3>

 </sect2>

 <sect2 xml:id="migration73.new-features.realine">
  <title>Readline</title>

  <para>
   Il supporto per il <literal>completion_append_character</literal> 
   e <literal>completion_suppress_append</literal> 
   è stato aggiunto alla funzione 
   <function>readline_info</function>. Queste opzioni 
   sono disponibili solo se PHP è collegato a 
   libreadline (piuttosto che libedit).
  </para>
 </sect2>

</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
