<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b1116af46680f7baf89c46610430a3b63ce9a1f0 Maintainer: pastore Status: ready -->
<!-- CREDITS: darvina -->
<section xml:id="info.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>Opzioni di Configurazione per Opzioni/Informazioni PHP</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry><link linkend="ini.assert.active">assert.active</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      Deprecato a partire da PHP 8.3.0
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.bail">assert.bail</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      Deprecato a partire da PHP 8.3.0
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.warning">assert.warning</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      Deprecato a partire da PHP 8.3.0
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.callback">assert.callback</link></entry>
     <entry>NULL</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      Deprecato a partire da PHP 8.3.0
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.quiet-eval">assert.quiet_eval</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>Rimosso a partire da PHP 8.0.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.assert.exception">assert.exception</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>
      Prima di PHP 8.0.0, il valore predefinito è <literal>"0"</literal>.
      Deprecato a partire da PHP 8.3.0
     </entry>
    </row>
    <row>
     <entry><link linkend="ini.enable-dl">enable_dl</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_SYSTEM</constant></entry>
     <entry>&removed.php.future;</entry>
    </row>
    <row>
     <entry><link linkend="ini.max-execution-time">max_execution_time</link></entry>
     <entry>"30"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-time">max_input_time</link></entry>
     <entry>"-1"</entry>
     <entry><constant>INI_PERDIR</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
     <entry>"64"</entry>
     <entry><constant>INI_PERDIR</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
     <entry>1000</entry>
     <entry><constant>INI_PERDIR</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.enable-gc">zend.enable_gc</link></entry>
     <entry>"1"</entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry></entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_SYSTEM</constant></entry>
     <entry>Disponibile da PHP 8.3.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link></entry>
     <entry>"0"</entry>
     <entry><constant>INI_SYSTEM</constant></entry>
     <entry>Disponibile da PHP 8.3.0.</entry>
    </row>
    <row>
     <entry><link linkend="ini.fiber.stack-size">fiber.stack_size</link></entry>
     <entry></entry>
     <entry><constant>INI_ALL</constant></entry>
     <entry>Disponibile da PHP 8.1.0.</entry>
    </row>
    </tbody>
   </tgroup>
  </table>
  &ini.php.constants;
 </para>
 
 &ini.descriptions.title;
 
 <para>
  <variablelist>
   <varlistentry xml:id="ini.assert.active">
    <term>
     <parameter>assert.active</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Abilita l'analisi degli <function>assert</function>.
      Dovrebbe essere invece utilizzato <link linkend="ini.zend.assertions">zend.assertions</link>
      per controllare il comportamento di <function>assert</function>.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.bail">
    <term>
     <parameter>assert.bail</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Termina uno script a fronte di un assert fallito.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.warning">
    <term>
     <parameter>assert.warning</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Invia un PHP warning per ogni asserzione fallita.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.callback">
    <term>
     <parameter>assert.callback</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Funzione utente da richiamare a fronte di un assert fallito.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.quiet-eval">
    <term>
     <parameter>assert.quiet_eval</parameter>
     <type>bool</type>
    </term>
    <listitem>
     &warn.feature.removed-8-0-0;
     <para>
      Utilizzare questo parametro di <function>error_reporting</function> durante 
      l'analisi dei un'asserzione. Se è abilitato, non sono visualizzati gli errori
      (error_reporting(0)) durante il parsing di una asserzione. Se disabilitato, gli errori
      saranno visualizzati in base all'impostazione di <function>error_reporting</function>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.assert.exception">
    <term>
     <parameter>assert.exception</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Emette un'eccezione <classname>AssertionError</classname> per l'assert
      fallito.
     </para>
     &warn.deprecated.feature-8-3-0;
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.enable-dl">
    <term>
      <parameter>enable_dl</parameter>
      <type>bool</type>
    </term>
    <listitem>
     <para>
      Questa direttiva permette di caricare in modo dinamico
      le estensioni di <literal>PHP</literal> potendo impostare <function>dl</function>
      on oppure off.
     </para>
     <para>
      La ragione principale per disabilitare il caricamento dinamico dei moduli
      è la sicurezza. Con il caricamento dinamico è possibile ignorare tutte le
      restrizioni <link linkend="ini.open-basedir">open_basedir</link>.
      Per default il caricamento dinamico è attivo.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-execution-time">
    <term>
     <parameter>max_execution_time</parameter>
      <type>int</type>
    </term>
    <listitem>
     <para>
      Questo parametro imposta il tempo massimo in secondi concessi ad uno
      script per l'esecuzione prima di essere interrotto dal parser. Questo aiuta
      a prevenire che script scritti male blocchino il server. Per default
      è impostato a <literal>30</literal>. Quando si esegue PHP
      dalla <link linkend="features.commandline">linea di
      comando</link> l'impostazione predefinita è <literal>0</literal>. 
     </para>
     <para>
      Su sistemi non Windows, il tempo massimo di esecuzione non è condizionato dalle chiamate di sistema,
      dalle operazioni sugli stream, eccetera. Vedere la funzione
      <function>set_time_limit</function> per maggiori 
      dettagli.
     </para>
     <para>
      Anche il server web ha i propri timeout. Ad esempio Apache
      ha un proprio parametro <literal>Timeout</literal>, IIS ha una 
      funzione di timeout sugli script CGI,
      entrambi con default 300 secondi. Vedere la documentazione del server
      web per maggiori dettagli.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-time">
    <term>
     <parameter>max_input_time</parameter>
      <type>int</type>
    </term>
    <listitem>
     <para>
      Imposta il tempo massimo in secondi concesso ad uno script
      per ricevere i dati di input, tipo POST, GET e upload di file. Il cronometraggio comincia nel momento in cui PHP
      viene richiamato nel server e termina quando inizia l'esecuzione.
      Il valore predefinito è <literal>-1</literal>, il quale indica che 
      invece viene usato il valore 
      <link linkend="ini.max-execution-time">max_execution_time</link>. Impostare a <literal>0</literal> per permettere tempo illimitato.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-nesting-level">
    <term>
     <parameter>max_input_nesting_level</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Imposta la profondità massima di nidificazione delle
      <link linkend="language.variables.external">variabili di input</link> (es.
      <varname>$_GET</varname>, <varname>$_POST</varname>.)
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.max-input-vars">
    <term>
     <parameter>max_input_vars</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Quante <link linkend="language.variables.external">variabili
      di input</link> possono essere accettate (il limite è applicato alle variabili 
      superglobali $_GET, $_POST e $_COOKIE separatamente). L'uso di questa direttiva
      mitiga la possibilità di attacchi di tipo denial of service che usano collisioni hash.
      Se ci sono più variabili di input di quanto specificato da questa direttiva,
      viene rilasciato un <constant>E_WARNING</constant>, e le ulteriori variabili
      di input vengono troncate dalla richiesta.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry xml:id="ini.zend.enable-gc">
    <term>
     <parameter>zend.enable_gc</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Abilita o disabilita il collezionista di riferimento circolare.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.max-allowed-stack-size">
    <term>
     <parameter>zend.max_allowed_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Il massimo spazio di stack nativo che il sistema operativo consente
      al programma di consumare.
      Cercare di consumare più di quanto il sistema operativo consenta
      in genere provoca un crash grave senza informazioni di debug facilmente
      disponibili.
      Per semplificare il debug, il motore genera un
      <classname>Error</classname>
      prima che accada (quando il programma utilizza più di
      <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>-<link linkend="ini.zend.reserved-stack-size">zend.reserved_stack_size</link>
      byte di stack).
     </para>
     <para>
      La ricorsione nel codice definito dall'utente non consuma spazio di stack nativo.
      Tuttavia, le funzioni interne e i metodi magici lo fanno.
      Una ricorsione molto profonda che coinvolge queste funzioni può causare l'esaurimento
      di tutto lo spazio di stack nativo disponibile da parte del programma.
     </para>
     <para>
      I valori possibili per questo parametro sono:
      <simplelist>
       <member>
        <literal>0</literal>:
        Rileva automaticamente lo spazio massimo di stack nativo che il sistema operativo
        consente al programma di consumare.
        Questo è il valore predefinito.
        Quando il rilevamento non è possibile, viene utilizzato un valore predefinito di sistema noto.
       </member>
       <member>
        <literal>-1</literal>: Disabilita il controllo delle dimensioni dello stack nel motore.
       </member>
       <member>
        Intero positivo: una dimensione fissa, in byte.
        Impostare questo valore su un valore troppo alto ha lo stesso effetto della disabilitazione del controllo delle
        dimensioni dello stack.
       </member>
      </simplelist>
     </para>
     <para>
      Poiché la dimensione dello stack di
      <link linkend="language.fibers">fibers</link>
      è determinata da
      <link linkend="ini.fiber.stack-size">fiber.stack_size</link>,
      il valore di questo parametro viene utilizzato al posto di
      <link linkend="ini.zend.max-allowed-stack-size">zend.max_allowed_stack_size</link>
      quando si controlla l'utilizzo dello stack durante l'esecuzione di una Fiber.
     </para>
     <note>
      <para>
       Questo non è correlato agli overflow del <emphasis>buffer</emphasis> dello stack e non è una funzionalità
       di sicurezza.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.zend.reserved-stack-size">
    <term>
     <parameter>zend.reserved_stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      La dimensione dello stack riservato, in byte.
      Questa viene sottratta dalla
      <link linkend="ini.zend.max-allowed-stack-size">dimensione massima consentita dello stack</link>,
      come buffer, quando si controlla la dimensione dello stack.
     </para>
     <para>
      I valori possibili per questo parametro sono:
      <simplelist>
       <member>
        <literal>0</literal>: Rileva automaticamente una dimensione ragionevole.
       </member>
       <member>
        Intero positivo: dimensione fissa, in byte.
       </member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="ini.fiber.stack-size">
    <term>
     <parameter>fiber.stack_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      La dimensione dello stack nativo, in byte, allocata per ogni
      <link linkend="language.fibers">Fiber</link>.
     </para>
     <para>
      Il valore predefinito è 1MiB sui sistemi con una dimensione del puntatore inferiore a
      8 byte, o 2 MiB altrimenti.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
